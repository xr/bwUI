/// To clear the float elements.
///
/// @author liang@bonusway.com
///
///
/// @example scss - clear fix after `.foo` element.
///   .foo {
///     @include clearfix();
///   }
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

/// To let the element locate at the center of its parent (horizontally and vertically).
///
/// @author liang@bonusway.com
///
///
/// @example scss - absolute center `.foo`.
///   .foo {
///     @include abs-center();
///   }
@mixin abs-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/// To add consistent shadowing feeling
///
/// @author liang@bonusway.com
///
///
/// @example scss - box shadowing element
///   .foo {
///     @include box-shadow();
///   }
@mixin box-shadow {
    box-shadow: 0 5px 10px 0 rgba(35,49,66,0.10);
}

/// To add transition
///
/// @author liang@bonusway.com
///
///
@mixin transition {
    transition: all .3s;
}

/// To hide element for transition
///
/// @author liang@bonusway.com
///
///
@mixin invisible {
    opacity: 0;
    visibility: hidden;
}

/// To show element for transition
///
/// @author liang@bonusway.com
///
///
@mixin visible {
    opacity: 1;
    visibility: visible;
}

/// Media query manager mixin
///
/// @author liang@bonusway.com
///
/// @param {property} $breakpoint - the property name from `$gl-mq-list` map.
@mixin respond($breakpoint) {
    @if not map-has-key($gl-mq-list, $breakpoint) {
        @error "Invalid breakpoint: `#{$breakpoint}`.";
    } @else {
        $width: map-get($gl-mq-list, $breakpoint);
        @media only screen and (max-width: $width) { @content };
    }
}